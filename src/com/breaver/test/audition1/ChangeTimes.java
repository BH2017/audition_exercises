/**
 * 牛牛想对一个数做若干次变换，直到这个数只剩下一位数字。
变换的规则是：将这个数变成 所有位数上的数字的乘积。比如285经过一次变换后转化成2*8*5=80.
问题是，要做多少次变换，使得这个数变成个位数。 
输入描述:
输入一个整数。小于等于2,000,000,000。
输出描述:
输出一个整数，表示变换次数。
输入例子:
285
输出例子:
2
 */
package com.breaver.test.audition1;

/**
 * @author zzf
 *@date 2017年6月21日 上午10:31:29
 */
public class ChangeTimes {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
